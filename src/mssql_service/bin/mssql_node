#!/usr/bin/env ruby
# -*- mode: ruby -*-
#
# Copyright (c) 2009-2011 VMware, Inc.

ENV["BUNDLE_GEMFILE"] ||= File.expand_path('../../Gemfile', __FILE__)
require 'bundler/setup'
require 'vcap_services_base'

$LOAD_PATH.unshift File.join(File.dirname(__FILE__), '..', 'lib')
require 'mssql_service/node'

class VCAP::Services::Mssql::NodeBin < VCAP::Services::Base::NodeBin

  def node_class
    VCAP::Services::Mssql::Node
  end

  def default_config_file
    config_base_dir = ENV["CLOUD_FOUNDRY_CONFIG_PATH"] || File.join(File.dirname(__FILE__), '..', 'config')
    File.join(config_base_dir, 'mssql_node.yml')
  end

  def additional_config(options, config)
    options[:gzip_bin] = parse_property(config, "gzip_bin", String)
    options[:max_db_size] = parse_property(config, "max_db_size", Integer)
    options[:max_long_query] = parse_property(config, "max_long_query", Integer)
    options[:max_long_tx] = parse_property(config, "max_long_tx", Integer)
    options[:kill_long_tx] = parse_property(config, "kill_long_tx", Boolean)
    options[:max_user_conns] = parse_property(config, "max_user_conns", Integer, :optional => true)
    options[:mssql] = parse_property(config, "mssql", Hash)
    options[:socket] = parse_property(config, "socket", String, :optional => true)
    options[:connection_pool_size] = parse_property(config, "connection_pool_size", Hash)
    options[:connection_wait_timeout] = parse_property(config, "connection_wait_timeout", Integer, :optional => true)
    options[:use_warden] = parse_property(config, "use_warden", Boolean, :optional => true, :default => false)
    options[:mssql_provider] = parse_property(config, "mssql_provider", String, :optional => true, :default => 'standard')
    options
  end

end

VCAP::Services::Mssql::NodeBin.new.start
