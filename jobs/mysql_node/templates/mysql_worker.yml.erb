---
<%
service = "mysql"
plan_enabled = properties.service_plans && properties.service_plans.send(service.to_sym)
plan = properties.mysql_node.plan
plan_conf = plan_enabled && properties.service_plans.send(service.to_sym).send(plan.to_sym).configuration
lifecycle = properties.service_lifecycle
warden = plan_conf.warden
use_warden = warden && warden.enable

node = properties.mysql_node
supported_versions = node.supported_versions

version_configs = {
  '5.1' => {
    'port'        => 3306,
    'socket'      => '/var/vcap/sys/run/mysqld/mysqld.sock',
    'binary_dir'  => '/var/vcap/packages/mysql/bin',
  },

  '5.5' => {
    'port'        => 3307,
    'socket'      => '/var/vcap/sys/run/mysqld/mysqld55.sock',
    'binary_dir'  => '/var/vcap/packages/mysql55/bin',
  },

  '5.6' => {
    'port'        => 3308,
    'socket'      => '/var/vcap/sys/run/mysqld/mysqld56.sock',
    'binary_dir'  => '/var/vcap/packages/mysql56/bin',
  }
}

if use_warden
  version_configs.each do |k, v|
    v['datadir'] = '/var/vcap/store/mysql'
  end
else
  data_dir_suffix = {'5.1' => '', '5.5' => '55', '5.6' => '56'}
  version_configs.each do |k, v|
    v['datadir'] = "/var/vcap/store/mysql#{data_dir_suffix[k]}"
  end
end
%>
<% if lifecycle and lifecycle.resque %>
<% snapshot_dir = lifecycle.mount_point || "/var/vcap/services_snapshot" %>
service_name: mysql
snapshots_base_dir: <%= snapshot_dir %>
serialization_base_dir: <%= snapshot_dir %>
local_db: sqlite3:/var/vcap/store/mysql_node.db
tmp_dir: <%= lifecycle.tmp_dir || "/tmp" %>
resque:
  host: <%= lifecycle.resque.host %>
  port: <%= lifecycle.resque.port %>
  password: "<%= lifecycle.resque.password %>"
  expire: <%= lifecycle.resque.expire %>
logging:
  level: debug
  file: /var/vcap/sys/log/mysql_node/mysql_worker.log
  <% if properties.syslog_aggregator %>
  syslog: vcap.mysql_worker
  <% end %>
index: <%= spec.index %>
node_id: <%= "#{service}_node_#{plan}_#{spec.index}" %>
download_url_template: "http://<%= lifecycle.download_url %>/serialized/%{service}/%{name}/snapshots/%{snapshot_id}?token=%{token}"
snapshot_quota: <%= plan_enabled && plan_conf.lifecycle && plan_conf.lifecycle.snapshot && plan_conf.lifecycle.snapshot.quota || 0 %>
serialization:
  max_download_size_mb: <%= properties.service_lifecycle.serialization_max_download_size || 10 %>
# addtional options
mysql:
<% supported_versions.each do |version| %>
  <%= version %>:
    host: localhost
    port: <%= version_configs[version]['port'] %>
    socket: <%= version_configs[version]['socket'] %>
    user: root
    pass: "<%= node.password %>"
    mysqldump_bin:  <%= "#{version_configs[version]['binary_dir']}/mysqldump" %>
    mysql_bin:  <%= "#{version_configs[version]['binary_dir']}/mysql" %>
<% end %>
gzip_bin: /bin/gzip
<% if use_warden %>
use_warden: true
<% end %>
<%
  fog = lifecycle.fog
  fog.instance_eval("def fields; @table.keys; end;")
%>
fog:
<% fog.fields.each do |field| %>
  <%= field %>: <%= fog.send(field) %>
<% end %>
mysqld:
<% supported_versions.each do |version| %>
  <%= version %>:
    datadir: <%= version_configs[version]['datadir'] %>
    innodb_file_per_table: 1
    innodb_log_file_size: 5M
    innodb_autoextend_increment: 8
<% end %>
backup:
  perl_bin: /var/vcap/packages/perl/bin
  xtrabackup_bin: /var/vcap/packages/mysql_xtrabackup/bin
  dbd_mysql_lib: /var/vcap/packages/dbd_mysql/lib/perl5/x86_64-linux/
<% end %>
